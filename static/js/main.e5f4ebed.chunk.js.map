{"version":3,"sources":["App.js","helpers/calculator.js","reportWebVitals.js","index.js"],"names":["App","number1","useRef","number2","useState","result","setResult","submitHandler","event","preventDefault","firstValue","current","value","secondValue","Number","sum","className","onSubmit","htmlFor","type","name","id","placeholder","ref","required","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oMAuCeA,MAlCf,WACE,IAAMC,EAAUC,iBAAO,MACjBC,EAAUD,iBAAO,MACvB,EAA4BE,mBAAS,MAArC,mBAAOC,EAAP,KAAeC,EAAf,KAEMC,EAAgB,SAACC,GACrBA,EAAMC,iBAEN,IAAMC,EAAaT,EAAQU,QAAQC,MAC7BC,EAAcV,EAAQQ,QAAQC,MAEpCN,EChBQ,WAA+B,IAAjBH,EAAgB,uDAAN,EAChC,OAAOW,OAD+B,uDAAnB,GACMA,OAAOX,GDetBY,CAAIL,EAAYG,KAG5B,OACE,sBAAKG,UAAU,MAAf,UACE,uBAAMC,SAAU,SAACT,GAAD,OAAWD,EAAcC,IAAzC,UACE,gCACE,uBAAOU,QAAQ,UAAf,yBACA,uBAAOC,KAAK,SAASC,KAAK,UAAUC,GAAG,UAAUC,YAAY,8BAA2BC,IAAKtB,EAASuB,UAAQ,OAEhH,gCACE,uBAAON,QAAQ,UAAf,yBACA,uBAAOC,KAAK,SAASC,KAAK,UAAUC,GAAG,UAAUC,YAAY,6BAA0BC,IAAKpB,EAASqB,UAAQ,OAE/G,8BACE,gDAGJ,6BAAKnB,QEtBIoB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.e5f4ebed.chunk.js","sourcesContent":["import { useRef, useState } from 'react';\n\nimport './App.css';\nimport { sum } from './helpers/calculator';\n\nfunction App() {\n  const number1 = useRef(null);\n  const number2 = useRef(null);\n  const [result, setResult] = useState(null)\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    \n    const firstValue = number1.current.value;\n    const secondValue = number2.current.value;\n\n    setResult(sum(firstValue, secondValue));\n  }\n\n  return (\n    <div className=\"App\">\n      <form onSubmit={(event) => submitHandler(event)}> \n        <div>\n          <label htmlFor=\"number1\">Número 1</label>\n          <input type=\"number\" name=\"number1\" id=\"number1\" placeholder=\"Insira o primeiro número\" ref={number1} required />\n        </div>\n        <div>\n          <label htmlFor=\"number2\">Número 2</label>\n          <input type=\"number\" name=\"number2\" id=\"number2\" placeholder=\"Insira o segundo número\" ref={number2} required />\n        </div>\n        <div>\n          <button>Somar</button>\n        </div>\n      </form>\n      <h1>{result}</h1>\n    </div>\n  );\n}\n\nexport default App;\n","const sum = (number1 = 0, number2 = 0) => {\r\n    return Number(number1) + Number(number2);\r\n}\r\n\r\nexport { sum };","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}